# Name of the GitHub Actions
name: Automated API tests on Postman

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  CLIENT_URL: ${{ secrets.CLIENT_URL }}
  EMAIL_NAME_SERVICE: ${{ secrets.EMAIL_NAME_SERVICE }}
  EMAIL_PASSWORD_SERVICE: ${{ secrets.EMAIL_PASSWORD_SERVICE }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  GOOGLE_CALL_BACK: ${{ secrets.GOOGLE_CALL_BACK }}
  GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
  GOOGLE_CLOUD_PRIVATE_KEY_ID: ${{ secrets.GOOGLE_CLOUD_PRIVATE_KEY_ID }}
  GOOGLE_CLOUD_PRIVATE_KEY_ENCODE: ${{ secrets.GOOGLE_CLOUD_PRIVATE_KEY_ENCODE }}
  GOOGLE_CLOUD_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLOUD_CLIENT_EMAIL }}
  GOOGLE_CLOUD_STORAGE_MEDIA_BUCKET: ${{ secrets.GOOGLE_CLOUD_STORAGE_MEDIA_BUCKET }}
  GOOGLE_CLOUD_CLIENT_ID: ${{ secrets.GOOGLE_CLOUD_CLIENT_ID }}
  JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
  JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
  STUDENT_JWT_ACCESS_SECRET: ${{ secrets.STUDENT_JWT_ACCESS_SECRET }}
  STUDENT_JWT_REFRESH_SECRET: ${{ secrets.STUDENT_JWT_REFRESH_SECRET }}
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
  WHEEL_OF_NAME_SECRET_KEY: ${{ secrets.WHEEL_OF_NAME_SECRET_KEY }}
  VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
  VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
  VAPID_EMAIL: ${{ secrets.VAPID_EMAIL}}
  NODE_ENV: test

# Set the actions that triggers the workflow
on:
  push:
    branches:
      - '**'
  workflow_dispatch:
jobs:
  basic-user-flow-test:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Postman CLI
        run: curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      # Install Node on the runner
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Or your preferred Node.js version

          # Added the missing hyphen here
      - name: Build & Run Test Server
        run: npm run docker:build:run:test

      - name: Wait for server to be ready
        run: |
          echo "Waiting 10 seconds for server to start..."
          sleep 10

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # Run the POSTMAN Collection
      - name: Run Postman Collection
        run: |
          postman collection run "37935730-d3db3012-849e-4a56-9787-33b317d4abaf" -e "19610448-7e19cd20-f24a-4726-a730-f51baa7003cc"

  test-school-delete:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Postman CLI
        run: curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      # Install Node on the runner
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Or your preferred Node.js version

          # Added the missing hyphen here
      - name: Build & Run Test Server
        run: npm run docker:build:run:test

      - name: Wait for server to be ready
        run: |
          echo "Waiting 10 seconds for server to start..."
          sleep 10

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # Run the POSTMAN Collection
      - name: Run Postman Collection
        run: |
          postman collection run "37935730-554c9a4f-9c80-451d-a58e-bf21b9966c12" -e "19610448-7e19cd20-f24a-4726-a730-f51baa7003cc"

          # THEN, dump the logs. This will include everything from the Postman run.
      - name: Display Docker Container Logs
        # This step will run even if the Postman collection fails
        if: always()
        run: docker logs tatuga-ci-container

  test-attendence:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Postman CLI
        run: curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      # Install Node on the runner
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Or your preferred Node.js version

          # Added the missing hyphen here
      - name: Build & Run Test Server
        run: npm run docker:build:run:test

      - name: Wait for server to be ready
        run: |
          echo "Waiting 10 seconds for server to start..."
          sleep 10

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # Run the POSTMAN Collection
      - name: Run Postman Collection
        run: |
          postman collection run "37935730-207b24cd-aa9b-4af6-a632-e7efdc0afadd" -e "19610448-7e19cd20-f24a-4726-a730-f51baa7003cc"

  test-student:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Postman CLI
        run: curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      # Install Node on the runner
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Or your preferred Node.js version

          # Added the missing hyphen here
      - name: Build & Run Test Server
        run: npm run docker:build:run:test

      - name: Wait for server to be ready
        run: |
          echo "Waiting 10 seconds for server to start..."
          sleep 10

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # Run the POSTMAN Collection
      - name: Run Postman Collection
        run: |
          postman collection run "37935730-0db518e6-2c97-4d31-a01a-572be2de1e91" -e "19610448-7e19cd20-f24a-4726-a730-f51baa7003cc"

  test-user:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Postman CLI
        run: curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      # Install Node on the runner
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Or your preferred Node.js version

          # Added the missing hyphen here
      - name: Build & Run Test Server
        run: npm run docker:build:run:test

      - name: Wait for server to be ready
        run: |
          echo "Waiting 10 seconds for server to start..."
          sleep 10

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # Run the POSTMAN Collection
      - name: Run Postman Collection
        run: |
          postman collection run "37935730-20dc6306-e08a-466a-8dfc-a4bd74ebf3b1" -e "19610448-7e19cd20-f24a-4726-a730-f51baa7003cc"

  test-student-delete:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Postman CLI
        run: curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      # Install Node on the runner
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Or your preferred Node.js version

          # Added the missing hyphen here
      - name: Build & Run Test Server
        run: npm run docker:build:run:test

      - name: Wait for server to be ready
        run: |
          echo "Waiting 10 seconds for server to start..."
          sleep 10

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # Run the POSTMAN Collection
      - name: Run Postman Collection
        run: |
          postman collection run "37935730-206efb6a-f229-419a-9da7-5eba07395a35" -e "19610448-7e19cd20-f24a-4726-a730-f51baa7003cc"
